import 'package:flutter/material.dart';import 'package:intl/intl.dart';class DateTimePicker extends StatefulWidget {  @override  _DateTimePickerState createState() => _DateTimePickerState();}class _DateTimePickerState extends State<DateTimePicker> {  DateTime selectedDate= DateTime.now();  final DateFormat dateFormat = DateFormat('dd-MM-yyyy HH:mm');  Color _iconColor = Colors.black;  @override  Widget build(BuildContext context) {    return GestureDetector(            child: Row( mainAxisAlignment: MainAxisAlignment.end,              crossAxisAlignment: CrossAxisAlignment.center,              children: [                Padding(                  padding: const EdgeInsets.only(left: 11.0,right: 10),                  child: Text(dateFormat.format(selectedDate),                    style: TextStyle(color: Colors.green[900],fontSize: 20,fontWeight: FontWeight.bold), ),                ),                IconButton(                  icon: Icon(Icons.calendar_today,color: _iconColor,),                  onPressed: ()async {                    final selectedDate = await _selectDateTime(context);                    if (selectedDate==null) return ;                    print(selectedDate);                    final selectedTime= await _selectTime(context);                    if (selectedTime==null) return ;                    print(selectedTime);                    setState(() {                      this.selectedDate = DateTime(                        selectedDate.year,                        selectedDate.month,                        selectedDate.day,                        selectedTime.hour,                        selectedTime.minute,                      );                      _iconColor = Colors.lightGreen;                    });                  },                ),              ],          ),                //Text(dateFormat.format(selectedDate)),        // selected date and time shold show here              );}  Future<DateTime> _selectDateTime(BuildContext context) => showDatePicker(    context: context,    initialDate: DateTime.now().add(Duration(seconds: 1)),    firstDate: DateTime.now(),    lastDate: DateTime(2021),  );  Future<TimeOfDay> _selectTime(BuildContext context) =>    showTimePicker(context: context,initialTime: TimeOfDay(hour: now.hour, minute: now.minute ));    final now = DateTime.now();}